// SPDX-License-Identifier: GPL-3.0
pragma solidity ^0.8.7;

import "@openzeppelin/contracts/utils/Strings.sol";
import "@openzeppelin/contracts/access/AccessControl.sol";

contract Bintec_Place is AccessControl {

    uint[50][30] private _pixels;
    mapping(address => uint256) private _times;
    bytes32 public constant EDITOR_ROLE = keccak256("EDITOR_ROLE");

    constructor() {
        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);
    }

    function setPixelColor( uint256 x,uint256 y,uint color, uint time ) public {
        require(_times[msg.sender] + time < block.timestamp, "Espera...");
        _pixels[x][y] = color;
        _times[msg.sender] = block.timestamp;
    }

    function getPixelColor(uint256 x, uint256 y) public view returns (uint){
        return _pixels[x][y];
    }

    function getTime() public view returns (uint256) {
        return _times[msg.sender];
    }

    function setPixelColorAdmin( uint256 x, uint256 y, uint color ) public onlyRole(EDITOR_ROLE) {
        _pixels[x][y] = color;
    }

    function clearAllPixels() public onlyRole(EDITOR_ROLE) {
        uint[50][30] memory test ;
        _pixels = test;
    }

    function getAllPixels() public view returns (uint[50][30] memory) {
        return _pixels;
    }
}
